server:
  port: 19091  # 게이트웨이 서비스가 실행될 포트 번호

spring:
  data:
    redis:
      host: localhost  # Redis 서버의 호스트명
      port: 6379       # Redis 서버 포트
      username: default
      password: systempass
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  application:
    name: gateway-service  # 애플리케이션 이름을 'gateway-service'로 설정
  cloud:
    gateway:
      routes: # Spring Cloud Gateway의 라우팅 설정
        - id: user-service  # 라우트 식별자
          uri: lb://user-service  # 'order-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/users/**
        - id: user-service  # 라우트 식별자
          uri: lb://user-service  # 'order-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/delivery_managers/**
        - id: user-service  # 라우트 식별자
          uri: lb://user-service  # 'order-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/messages/**
        - id: ai-service  # 라우트 식별자
          uri: lb://ai-service  # 'product-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/ai/**  # /product/** 경로로 들어오는 요청을 이 라우트로 처리
        - id: hub-service  # 라우트 식별자
          uri: lb://hub-service  # 'product-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/hubs/**  # /product/** 경로로 들어오는 요청을 이 라우트로 처리
        - id: hub-service  # 라우트 식별자
          uri: lb://hub-service  # 'product-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/hub-paths/**
        - id: hub-service  # 라우트 식별자
          uri: lb://hub-service  # 'product-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/products/**
        - id: hub-service  # 라우트 식별자
          uri: lb://hub-service  # 'product-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/companies/**
        - id: order-service  # 라우트 식별자
          uri: lb://order-service  # 'order-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/orders/**
        - id: auth-service  # 라우트 식별자
          uri: lb://auth-service  # 'auth-service'라는 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/auth/**  # /auth/** 경로로 들어오는 요청을 이 라우트로 처리
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정
springdoc:
  swagger-ui:
    use-root-path: true
    urls[0]:
      name: User API
      url: http://localhost:19091/users/v3/api-docs
    urls[1]:
      name: Hub API
      url: http://localhost:19091/hubs/v3/api-docs
    urls[2]:
      name: Order API
      url: http://localhost:19091/orders/v3/api-docs
    urls[3]:
      name: AI API
      url: http://localhost:19091/ai/v3/api-docs
    urls[4]:
      name: Auth API
      url: http://localhost:19091/auth/v3/api-docs

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/  # Eureka 서버의 URL을 지정
service:
  jwt:
    access-expiration: 3600000
    secret-key: "3d9d5abb6494559eab91a0fd6b0bcd64806d1718de3e06bfcde2f0cfa98673efb893fad45f21ce98e43ced1106b0bca7a6b9f6054e84d54d4613240d8b8f90ae"
